;; TLang supports templates, which means that expressions are evaluated
;; in place.

;; When used in expressions, templates can be used to add zero or more items
;; to the given

;; {"hello"}
;; {"hello" "world" 1 2 3}
;; {"hello" {"world" 1 2} 3}

;; But templates are more useful when used in a context that changes the
;; interpretation of the code, such as in `(quote)` or `(quote)`.

;;(quote range {(add 20 30)})

;; '(0 1 {range 2 10})

;;(tree (integer {(add 20 30)}))

;; FIXME: This one does not work , it generates [Lorem [ispum â€¦]]
;; (list "Lorem" {"ipsum" {"color" "sit"} "amet"})

(tree (node {"hello" {"world" 1 2} 3}))
