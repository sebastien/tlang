(primitive cond out!)

;; It should probably be something more high level like
;; (switch N (0 (out! "0")) (1 (out! "2")) (N (out!)))
;; Or we could do something different like
;; (iter (iter AC AE) (iter BC BE) …) | first (→ (A) (# A 0)) | rest
;; Which means that we create a lazy iterator of iterato with all the 
;; branches (COND EXPR…) 

(cond 1     (out! "True") (out! "False"))
(cond 0     (out! "True") (out! "False"))
(cond ()    (out! "True") (out! "False"))
(cond #True (out! "True") (out! "False"))
(cond False (out! "True") (out! "False"))
